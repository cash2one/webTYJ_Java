package com.flf.mapper;

import com.flf.entity.ElectricityMeterReadingData;
import com.flf.entity.MeterReadingData;
import com.flf.entity.SearchMeter;

import java.util.Date;
import java.util.List;
import java.util.Map;

public interface ElectricityMeterReadingDataMapper {
	int deleteElectricityMeterReadingData(String electricityMeterReadingDataId);  //��ݵ�����idɾ����Ϣ

    int insertElectricityMeterReadingData(ElectricityMeterReadingData electricityMeterReadingData); //�����������Ϣ

    List<ElectricityMeterReadingData> listPageElectricityMeterReadingDataBySearchMeter(SearchMeter searchMeter);//��ҳ��ѯ��������Ϣ
    
    List<ElectricityMeterReadingData> listPageElectricityMeterReadingData(ElectricityMeterReadingData electricityMeterReadingData);
    
    List<ElectricityMeterReadingData> listAllElectricityMeterReadingData(); //��ѯ���е�������Ϣ

    ElectricityMeterReadingData getElectricityMeterReadingDatabyId(String electricityMeterReadingDataId); //ͨ�������id��ȡ��������Ϣ

    int updateElectricityMeterReadingData(ElectricityMeterReadingData electricityMeterReadingData);//���µ�������Ϣ}
    
    List<ElectricityMeterReadingData> listElectricityMeterReadingDatebyDate(Date meterReadingDate); 
			   //根据抄表日期查询抄表数据
    
    List<ElectricityMeterReadingData> listElectricityMeterReadingDatebyName(
			String projectName);   // 根据计划名称查询抄表数据
    
    List<ElectricityMeterReadingData> listElectricityMeterReadingDatabyId(
			String electricityMeterRecordId); 
    //根据电表id查询抄表数据
    List<ElectricityMeterReadingData> getElectricityMeterReadingbyId(Map map);

    //根据建筑id查询抄表数据
    List<ElectricityMeterReadingData> listElectricityMeterReadingDatabyBuildingId(String addressId);
    
   /* MeterReadingData selectByBuildingStructureIdAndElectricityMeterReadingDate(String buildingStructureId, String specifiedDate);

	*/
    /**
	 * 根据水表建筑结构id和抄表日期查询水表用量
	 * @param buildingStructureId
	 * @param meterReadingDate
	 * @return
	 */
}