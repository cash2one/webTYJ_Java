<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flf.mapper.ActualConsumptionRecordsMapper" >
  <resultMap id="BaseResultMap" type="com.flf.entity.ActualConsumptionRecords" >
    <id column="consumption_record_id" property="consumptionRecordId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="product_type" property="productType" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    consumption_record_id, order_id, product_type, product_id, product_name, num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ts_actual_consumption_records
    where consumption_record_id = #{consumptionRecordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ts_actual_consumption_records
    where consumption_record_id = #{consumptionRecordId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.flf.entity.ActualConsumptionRecords" >
    insert into ts_actual_consumption_records (consumption_record_id, order_id, product_type, 
      product_id, product_name, num
      )
    values (#{consumptionRecordId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, 
      #{productId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{num,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.flf.entity.ActualConsumptionRecords" >
    insert into ts_actual_consumption_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="consumptionRecordId != null" >
        consumption_record_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="productType != null" >
        product_type,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="consumptionRecordId != null" >
        #{consumptionRecordId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="productType != null" >
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flf.entity.ActualConsumptionRecords" >
    update ts_actual_consumption_records
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="productType != null" >
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=TINYINT},
      </if>
    </set>
    where consumption_record_id = #{consumptionRecordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flf.entity.ActualConsumptionRecords" >
    update ts_actual_consumption_records
    set order_id = #{orderId,jdbcType=VARCHAR},
      product_type = #{productType,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      num = #{num,jdbcType=TINYINT}
    where consumption_record_id = #{consumptionRecordId,jdbcType=VARCHAR}
  </update>
  
  <!-- 根据关联工单id查询所有的资源消耗记录信息 -->
  <select id="listRecordsByOrderId" parameterType="String" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from ts_actual_consumption_records where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
</mapper>