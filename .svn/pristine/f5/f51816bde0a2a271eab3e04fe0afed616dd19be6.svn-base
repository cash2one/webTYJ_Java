<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flf.mapper.PersonBuildingNewMapper">
	<resultMap id="BaseResultMap" type="PersonBuildingNew">
		<result column="person_building_id" property="personBuildingId"
			jdbcType="VARCHAR" />
		<result column="cust_id" property="custId" jdbcType="VARCHAR" />
		<result column="enterprise_id" property="enterpriseId"
			jdbcType="VARCHAR" />
		<result column="building_structure_id" property="buildingStructureId"
			jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="cust_type" property="custType" jdbcType="VARCHAR" />
		<result column="enterprise_call_type" property="enterpriseCallType"
			jdbcType="TINYINT" />
		<result column="accessory" property="accessory" jdbcType="VARCHAR" />
		<result column="gift_name" property="giftName" jdbcType="VARCHAR" />
		<result column="full_name" property="fullName" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="relation_date" property="relationDate" />
		<result column="cust_id" property="personId" />
		<result column="authorization_project_type_id" property="projectType" />
	</resultMap>

	<resultMap id="PersonCustNewResultMap" type="PersonCustNew">
		<result column="cust_id" property="custId" jdbcType="VARCHAR" />
		<result column="cust_code" property="custCode" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="native_place" property="nativePlace" jdbcType="VARCHAR" />
		<result column="census" property="census" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="card_type" property="cardType" jdbcType="TINYINT" />
		<result column="card_num" property="cardNum" jdbcType="VARCHAR" />
		<result column="jiajia_num" property="jiajiaNum" jdbcType="VARCHAR" />
		<result column="weixin_num" property="weixinNum" jdbcType="VARCHAR" />
		<result column="work_units" property="workUnits" jdbcType="VARCHAR" />
		<result column="position" property="position" jdbcType="VARCHAR" />
		<result column="marrie_state" property="marrieState" jdbcType="TINYINT" />
		<result column="edu_level" property="eduLevel" jdbcType="TINYINT" />
		<result column="social" property="social" jdbcType="VARCHAR" />
		<result column="landscape" property="landscape" jdbcType="TINYINT" />
		<result column="hobby" property="hobby" jdbcType="VARCHAR" />
		<result column="cust_level" property="custLevel" jdbcType="VARCHAR" />
		<result column="is_enterprise" property="isEnterprise"
			jdbcType="TINYINT" />
		<result column="urgent_contact_person" property="urgentContactPerson"
			jdbcType="VARCHAR" />
		<result column="urgent_contact_phone" property="urgentContactPhone"
			jdbcType="VARCHAR" />
		<result column="upload_image" property="uploadImage" jdbcType="VARCHAR" />
		<result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="HouseNewResultMap" type="HouseNew">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="building_id" property="buildingId" jdbcType="VARCHAR" />
		<result column="building_structure_id" property="buildingStructureId"
			jdbcType="VARCHAR" />
		<result column="house_num" property="houseNum" jdbcType="VARCHAR" />
		<result column="property" property="property" jdbcType="VARCHAR" />
		<result column="land_price" property="landPrice" jdbcType="DOUBLE" />
		<result column="last_transcation_price" property="lastTranscationPrice"
			jdbcType="DOUBLE" />
		<result column="house_name" property="houseName" jdbcType="VARCHAR" />
		<result column="house_postcode" property="housePostcode"
			jdbcType="VARCHAR" />
		<result column="manage_fee" property="manageFee" jdbcType="DOUBLE" />
		<result column="complete_date" property="completeDate"
			jdbcType="DATE" />
		<result column="elevator" property="elevator" jdbcType="TINYINT" />
		<result column="gate_guard" property="gateGuard" jdbcType="TINYINT" />
		<result column="join_date" property="joinDate" jdbcType="DATE" />
		<result column="join_state" property="joinState" jdbcType="TINYINT" />
		<result column="designer_draw" property="designerDraw"
			jdbcType="VARCHAR" />
		<result column="is_billing" property="isBilling" jdbcType="TINYINT" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="land_certificate" property="landCertificate"
			jdbcType="VARCHAR" />
		<result column="market_state" property="marketState" jdbcType="TINYINT" />
		<result column="special_fund" property="specialFund" jdbcType="TINYINT" />
		<result column="capital_type" property="capitalType" jdbcType="TINYINT" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sip_id" property="sipId" jdbcType="VARCHAR" />
		<result column="usable_area" property="usableArea" jdbcType="DOUBLE" />
		<result column="full_name" property="fullName" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 创建 by 肖聪 2015/6/19 -->

	<resultMap id="PersonAndHouseResultMap" type="PersonBuildingNew"
		extends="BaseResultMap">
		<association property="houseNew" select="selectHouseNew"
			column="building_structure_id" javaType="HouseNew">
			<id column="id" property="id" jdbcType="VARCHAR" />
			<result column="building_id" property="buildingId" jdbcType="VARCHAR" />
			<result column="building_structure_id" property="buildingStructureId"
				jdbcType="VARCHAR" />
			<result column="house_num" property="houseNum" jdbcType="VARCHAR" />
			<result column="property" property="property" jdbcType="VARCHAR" />
			<result column="land_price" property="landPrice" jdbcType="DOUBLE" />
			<result column="last_transcation_price" property="lastTranscationPrice"
				jdbcType="DOUBLE" />
			<result column="house_name" property="houseName" jdbcType="VARCHAR" />
			<result column="house_postcode" property="housePostcode"
				jdbcType="VARCHAR" />
			<result column="manage_fee" property="manageFee" jdbcType="DOUBLE" />
			<result column="complete_date" property="completeDate"
				jdbcType="DATE" />
			<result column="elevator" property="elevator" jdbcType="TINYINT" />
			<result column="gate_guard" property="gateGuard" jdbcType="TINYINT" />
			<result column="join_date" property="joinDate" jdbcType="DATE" />
			<result column="join_state" property="joinState" jdbcType="TINYINT" />
			<result column="designer_draw" property="designerDraw"
				jdbcType="VARCHAR" />
			<result column="is_billing" property="isBilling" jdbcType="TINYINT" />
			<result column="price" property="price" jdbcType="DOUBLE" />
			<result column="land_certificate" property="landCertificate"
				jdbcType="VARCHAR" />
			<result column="market_state" property="marketState" jdbcType="TINYINT" />
			<result column="special_fund" property="specialFund" jdbcType="TINYINT" />
			<result column="capital_type" property="capitalType" jdbcType="TINYINT" />
			<result column="password" property="password" jdbcType="VARCHAR" />
			<result column="sip_id" property="sipId" jdbcType="VARCHAR" />
			<result column="usable_area" property="usableArea" jdbcType="DOUBLE" />
			<result column="full_name" property="fullName" jdbcType="VARCHAR" />
		</association>
		<association property="personCustNew" column="cust_id"
			javaType="PersonCustNew" select="selectPersonNew">
			<result column="cust_id" property="custId" jdbcType="VARCHAR" />
			<result column="cust_code" property="custCode" jdbcType="VARCHAR" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="VARCHAR" />
			<result column="native_place" property="nativePlace" jdbcType="VARCHAR" />
			<result column="census" property="census" jdbcType="VARCHAR" />
			<result column="birthday" property="birthday" jdbcType="DATE" />
			<result column="card_type" property="cardType" jdbcType="TINYINT" />
			<result column="card_num" property="cardNum" jdbcType="VARCHAR" />
			<result column="jiajia_num" property="jiajiaNum" jdbcType="VARCHAR" />
			<result column="weixin_num" property="weixinNum" jdbcType="VARCHAR" />
			<result column="work_units" property="workUnits" jdbcType="VARCHAR" />
			<result column="position" property="position" jdbcType="VARCHAR" />
			<result column="marrie_state" property="marrieState" jdbcType="TINYINT" />
			<result column="edu_level" property="eduLevel" jdbcType="TINYINT" />
			<result column="social" property="social" jdbcType="VARCHAR" />
			<result column="landscape" property="landscape" jdbcType="TINYINT" />
			<result column="hobby" property="hobby" jdbcType="VARCHAR" />
			<result column="cust_level" property="custLevel" jdbcType="VARCHAR" />
			<result column="is_enterprise" property="isEnterprise"
				jdbcType="TINYINT" />
			<result column="urgent_contact_person" property="urgentContactPerson"
				jdbcType="VARCHAR" />
			<result column="urgent_contact_phone" property="urgentContactPhone"
				jdbcType="VARCHAR" />
			<result column="upload_image" property="uploadImage" jdbcType="VARCHAR" />
			<result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
		</association>
	</resultMap>

	<resultMap type="PersonBuildingNew" id="ResultMapWithHouseNew"
		extends="BaseResultMap">
		<association property="houseNew" column="building_structure_id"
			javaType="HouseNew"
			select="com.flf.mapper.HouseNewMapper.listHouseByBuildingStructureId" />
		<association property="stallNew" column="building_structure_id"
			javaType="StallNew"
			select="com.flf.mapper.StallNewMapper.listStallByBuildingStructureId" />
		<association property="storeNew" column="building_structure_id"
			javaType="StoreNew"
			select="com.flf.mapper.StoreNewMapper.listStoreByBuildingStructureId" />
		<association property="enterpriseCustNew" column="enterprise_id"
			javaType="EnterpriseCustNew"
			select="com.flf.mapper.EnterpriseCustNewMapper.getEnterpriseCustNewById" />
		<association property="personCustNew" column="cust_id"
			javaType="PersonCustNew" select="com.flf.mapper.PersonCustNewMapper.getPersonCustNewById" />
		<association property="buildingStructureNew" column="building_structure_id"
			javaType="BuildingStructureNew"
			select="com.flf.mapper.BuildingStructureNewMapper.getBuildingStructureNewbyId" />
	</resultMap>

	<resultMap type="PersonBuildingNew" id="ResultMapWithPersonCust"
		extends="BaseResultMap">
		<association property="personCustNew" column="cust_id"
			javaType="PersonCustNew" select="com.flf.mapper.PersonCustNewMapper.getPersonCustNewById" />
	</resultMap>
	<!-- 获取包含用户对象的信息 -->
	<resultMap type="PersonBuildingNew" id="ResultMapWithPersonCustAndEnterpriseCust"
		extends="BaseResultMap">
		<association property="personCustNew" column="cust_id"
			javaType="PersonCustNew" select="com.flf.mapper.PersonCustNewMapper.getPersonCustNewById" />
		<association property="enterpriseCustNew" column="enterprise_id"
			javaType="EnterpriseCustNew" select="com.flf.mapper.EnterpriseCustNewMapper.getEnterpriseCustNewById" />
	</resultMap>
	
	<resultMap type="PersonBuildingNew" id="BuildingCustResultMap" extends="BaseResultMap">
		<association property="buildingStructureNew" column="building_structure_id" javaType="BuildingStructureNew" select="com.flf.mapper.BuildingStructureNewMapper.getBuildingStructureNewbyId" />
		<association property="houseNew" column="building_structure_id" javaType="HouseNew" select="com.flf.mapper.HouseNewMapper.getHouseNewByBuildingStructId"></association>
	</resultMap>
	
	 <resultMap id="SipResultMap" type="Sipmanage" >
	    <result column="sip_id" property="sipId" jdbcType="VARCHAR" />
	    <result column="sip_name" property="sipName" jdbcType="VARCHAR" />
	    <result column="sip_pwd" property="sipPwd" jdbcType="VARCHAR" />
	    <result column="login_state" property="loginState" jdbcType="VARCHAR" />
	  </resultMap> 
	  
	  <resultMap id="houseNewResultMap" type="HouseNew" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="building_id" property="buildingId" jdbcType="VARCHAR" />
    <result column="building_structure_id" property="buildingStructureId" jdbcType="VARCHAR" />
    <result column="house_num" property="houseNum" jdbcType="VARCHAR" />
    <result column="property" property="property" jdbcType="VARCHAR" />
    <result column="land_price" property="landPrice" jdbcType="DOUBLE" />
    <result column="last_transcation_price" property="lastTranscationPrice" jdbcType="DOUBLE" />
    <result column="house_name" property="houseName" jdbcType="VARCHAR" />
    <result column="house_postcode" property="housePostcode" jdbcType="VARCHAR" />
    <result column="manage_fee" property="manageFee" jdbcType="DOUBLE" />
    <result column="complete_date" property="completeDate" jdbcType="DATE" />
    <result column="elevator" property="elevator" jdbcType="TINYINT" />
    <result column="gate_guard" property="gateGuard" jdbcType="TINYINT" />
    <result column="join_date" property="joinDate" jdbcType="DATE" />
    <result column="join_state" property="joinState" jdbcType="TINYINT" />
    <result column="designer_draw" property="designerDraw" jdbcType="VARCHAR" />
    <result column="is_billing" property="isBilling" jdbcType="TINYINT" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="land_certificate" property="landCertificate" jdbcType="VARCHAR" />
    <result column="market_state" property="marketState" jdbcType="TINYINT" />
    <result column="special_fund" property="specialFund" jdbcType="TINYINT" />
    <result column="capital_type" property="capitalType" jdbcType="TINYINT" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sip_id" property="sipId" jdbcType="VARCHAR" />
    <result column="usable_area" property="usableArea" jdbcType="DOUBLE" />
    <result column="house_area" property="houseArea" jdbcType="DOUBLE" />
    <result column="house_address" property="houseAddress" jdbcType="VARCHAR" />
    <result column="premises_permit" property="premisesPermit" jdbcType="VARCHAR" />
    <result column="house_attribute" property="houseAttribute" jdbcType="VARCHAR" />
    <result column="house_type" property="houseType" jdbcType="VARCHAR" />
    <result column="share_area" property="shareArea" jdbcType="DOUBLE" />
    <result column="complete_area" property="completeArea" jdbcType="DOUBLE" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="management_unit_price" property="managementUnitPrice"/>
    <result column="join_gang_state" property="joinGangState"/>
  </resultMap>
  
	<resultMap type="PersonBuildingNew" id="ResultMapForPayms">
		<result column="building_structure_id" property="buildingStructureId" jdbcType="VARCHAR" />
		<result column="cust_type" property="custType" jdbcType="VARCHAR" />
		<result column="project_name" property="projectName" jdbcType="VARCHAR" />
		<result column="full_name" property="fullName" jdbcType="VARCHAR" />
	</resultMap>

 	<select id="listPageHouseByenterpriseId" parameterType="PersonBuildingNew"
		resultMap="ResultMapWithHouseNew">
		SELECT a.* FROM (SELECT * FROM tc_person_building WHERE enterprise_id
		IS NOT NULL AND cust_type="业主" AND state=0
		<if test="enterpriseId!=null">
			AND enterprise_id=#{enterpriseId}
		</if>
		) a
		INNER JOIN tc_building_structure b ON a.building_structure_id = b.id
		INNER JOIN tc_enterprise_cust c ON c.enterprise_id =a.enterprise_id
	</select>

	<select id="getPersonBuildingNewByCustIdAndBsId" parameterType="String"
		resultMap="BaseResultMap">
		select * from tc_person_building where cust_id=#{0} and
		building_structure_id=#{1}
	</select>

	<select id="selectHouseNew" resultMap="HouseNewResultMap"
		parameterType="String">
		select a.id as id,a.market_state,a.join_state as
		join_state ,a.house_num,b.full_name,b.completion_area,b.inside_area
		from tc_house a
		left join tc_building_structure b on b.id=a.building_structure_id where
		a.id=#{0}
	</select>

	<select id="selectPersonNew" resultMap="PersonCustNewResultMap"
		parameterType="String">
		select * from tc_person_cust where cust_id=#{0}
	</select>

	<select id="listPersonBuildingNewByBuildingStructureId"
		resultMap="BaseResultMap" parameterType="String">
		select * from tc_person_cust where building_structure_id=#{0}
	</select>

	<select id="listPagePersonBuilding" resultMap="BaseResultMap"
		parameterType="PersonBuildingNew">
		SELECT a.*,b.`name`,d.`full_name` FROM `tc_person_building` a
		LEFT JOIN `tc_person_cust` b ON a.`cust_id`=b.`cust_id`
		LEFT JOIN `tc_building_structure` d ON a.building_structure_id = d.`id`
		WHERE
		a.building_structure_id =#{buildingStructureId}
		AND a.`cust_type`="业主"
		group by a.building_structure_id
	</select>

	<select id="listPersonBuildingNewByBuildingStructureIdone"
		resultMap="PersonAndHouseResultMap" parameterType="String">
		select * from tc_person_cust a
		left join tc_person_building b on a.cust_id=b.cust_id
		where b.building_structure_id=#{0} and b.state=0 and b.cust_type="业主"
		group by a.cust_id
	</select>

	<select id="listPersonBuildingNewByCustType" resultMap="BaseResultMap"
		parameterType="String">
		select * from tc_person_cust where cust_type=#{0}
	</select>

	<select id="listPagePersonBuildingNew" parameterType="PersonBuildingNew"
		resultMap="BaseResultMap">
		select a.*,b.name,c.full_name from tc_person_building a
		LEFT JOIN `tc_person_cust` b ON a.`cust_id`=b.`cust_id`
		LEFT JOIN `tc_building_structure` c ON a.`building_structure_id` = c.`id`
		where 1 = 1
		<if test="custId!=null and custId!=''">
			and cust_id=#{custId}
		</if>
		<if test="buildingStructureId!=null and buildingStructureId!=''">
			and building_structure_id=#{buildingStructureId}
		</if>
		<if test="enterpriseId!=null and enterpriseId!=''">
			and enterprise_id=#{enterpriseId}
		</if>
	</select>




	<select id="listAllPersonBuildingNew" resultMap="BaseResultMap">
		select * from tc_person_building
	</select>
	<select id="getPersonBuildingNewByCustId" resultMap="BaseResultMap">
		select * from tc_person_building where cust_id=#{custId}
	</select>

	<select id="getPersonBuildingNewById" parameterType="String"
		resultMap="BaseResultMap">
		select * from tc_person_building where person_building_id=#{0}
	</select>

	<delete id="deletePersonBuildingNew" parameterType="String">
		delete from tc_person_building where person_building_id=#{0}

	</delete>

	<insert id="insertPersonBuildingNew" parameterType="PersonBuildingNew">
		insert into tc_person_building (person_building_id, cust_id,
		enterprise_id,
		building_structure_id, state, cust_type,
		enterprise_call_type,accessory,relation_date)
		values (UUID(), #{custId,jdbcType=VARCHAR},
		#{enterpriseId,jdbcType=VARCHAR},
		#{buildingStructureId,jdbcType=VARCHAR},
		<if test="state!=null">
			#{state},
		</if>
		<if test="state==null">
			0,
		</if>
		#{custType,jdbcType=VARCHAR},
		#{enterpriseCallType,jdbcType=TINYINT},#{accessory,jdbcType=VARCHAR},now())
	</insert>




	<update id="updatePersonBuildingNew" parameterType="PersonBuildingNew">
		update tc_person_building
		set
		cust_id = #{custId,jdbcType=VARCHAR},
		enterprise_id = #{enterpriseId,jdbcType=VARCHAR},
		building_structure_id = #{buildingStructureId,jdbcType=VARCHAR},
		state = #{state,jdbcType=TINYINT},
		cust_type = #{custType,jdbcType=VARCHAR},
		enterprise_call_type = #{enterpriseCallType,jdbcType=TINYINT},
		accessory = #{accessory,jdbcType=VARCHAR},
		where person_building_id = #{personBuildingId,jdbcType=VARCHAR}
	</update>

	<!-- 通过建筑任务关系查询房屋和人物信息 有效关系 创建 by 肖聪 创建时间 -->
	<select id="listAllPersonAndHouseByHouseId" parameterType="String"
		resultMap="PersonAndHouseResultMap">
		SELECT a.* FROM tc_person_building a
		INNER JOIN tc_person_cust b ON a.cust_id=b.cust_id
		INNER JOIN tc_house c ON a.building_structure_id=c.building_structure_id
		where c.id=#{0} and a.state=0
	</select>

	<!-- 通过建筑任务关系查询商铺和人物信息 创建 by 肖聪 创建时间 -->
	<select id="listAllPersonAndHouseByStoreId" parameterType="String"
		resultMap="PersonAndHouseResultMap">
		SELECT a.* FROM tc_person_building a
		INNER JOIN tc_person_cust b ON a.cust_id=b.cust_id
		INNER JOIN tc_store c ON a.building_structure_id=c.building_structure_id
		where c.store_id=#{0}
	</select>

	<!-- 通过建筑任务关系查询车位和人物信息 创建 by 肖聪 创建时间 -->
	<select id="listAllPersonAndHouseByStallId" parameterType="String"
		resultMap="PersonAndHouseResultMap">
		SELECT a.* FROM tc_person_building a
		INNER JOIN tc_person_cust b ON a.cust_id=b.cust_id
		INNER JOIN tc_stall c ON a.building_structure_id=c.building_structure_id
		where c.stall_id=#{0}
	</select>


	<select id="listAll" resultMap="BaseResultMap">
		select * from tc_person_building
	</select>

	<select id="listAllPersonBuildingNewone" parameterType="PersonBuildingNew"
		resultMap="BaseResultMap">
		select * from tc_person_building where 1 = 1
		<if test="custId!=null and custId!=''">
			and cust_id=#{custId}
		</if>
		<if test="buildingStructureId!=null and buildingStructureId!=''">
			and building_structure_id=#{buildingStructureId}
		</if>
		<if test="enterpriseId!=null and enterpriseId!=''">
			and enterprise_id=#{enterpriseId}
		</if>
		<if test="custType!=null and custType!=''">
			and cust_type=#{custType}
		</if>
	</select>

	<!-- 状态为1表示此关系禁用，0为可用 -->
	<update id="updatePersonBuildingNewByState" parameterType="String">
		update tc_person_building
		set
		state = 1
		where building_structure_id=#{0}
	</update>

	<!-- 根据人屋关系查询员工与企业房屋的关系链 -->
	<select id="getRelationOfemplers" parameterType="PersonBuildingNew"
		resultMap="BaseResultMap">
		SELECT d.full_name,b.name,c.enterprise_name,a.* FROM
		`tc_person_building` a
		LEFT JOIN tc_person_cust b ON a.cust_id=b.cust_id
		LEFT JOIN tc_enterprise_cust c ON c.enterprise_id = a.enterprise_id
		LEFT JOIN tc_building_structure d ON d.id = a.building_structure_id
		WHERE 1=1 and a.state=0
		<if test="enterpriseId!=null and enterpriseId!=''">
			and a.enterprise_id=#{enterpriseId}
		</if>
		<if test="buildingStructureId!=null and buildingStructureId!=''">
			and a.building_structure_id=#{buildingStructureId}
		</if>
		<!-- GROUP BY a.person_building_id -->
	</select>

	<!-- 根据人屋关系查询员工与企业房屋的关系链 (建筑结构id) -->
	<select id="getRelationOfemplersByStructs" parameterType="PersonBuildingNew"
		resultMap="BaseResultMap">
		SELECT d.full_name,b.name,b.cust_id,a.* FROM `tc_person_building` a
		LEFT JOIN tc_person_cust b ON a.cust_id=b.cust_id
		LEFT JOIN tc_building_structure d ON d.id = a.building_structure_id
		WHERE 1=1 and a.state=0
		<if test="buildingStructureId!=null and buildingStructureId!=''">
			and a.building_structure_id=#{buildingStructureId}
		</if>
		<if test="custType!=null and custType!=''">
			and a.cust_type=#{custType}
		</if>
		<if test="personBuildingId!=null and personBuildingId!=''">
			and a.person_building_id=#{personBuildingId}
		</if>
		GROUP BY a.person_building_id
	</select>

	<!-- 根据人屋关系查询员工与企业房屋的关系链 (建筑结构id) -->
	<select id="selectHouseNewByCustType" parameterType="PersonBuildingNew"
		resultMap="BaseResultMap">
		SELECT d.full_name,b.name,a.* FROM `tc_person_building` a
		LEFT JOIN tc_person_cust b ON a.cust_id=b.cust_id
		LEFT JOIN tc_building_structure d ON d.id = a.building_structure_id
		WHERE 1=1
		<if test="buildingStructureId!=null and buildingStructureId!=''">
			and a.building_structure_id=#{buildingStructureId}
		</if>
		<if test="custType!=null and custType!=''">
			and a.cust_type=#{custType}
		</if>
		<if test="personBuildingId!=null and personBuildingId!=''">
			and a.person_building_id=#{personBuildingId}
		</if>
		GROUP BY a.person_building_id
	</select>

	<!-- 查询企业客户信息 -->
	<select id="getPersonBuildingNewByEnterpriseIdAndBsId"
		parameterType="String" resultMap="BaseResultMap">
		select * from tc_person_building where enterprise_id=#{0} and
		building_structure_id=#{1}
	</select>

	<!-- 通过个人客户id查询客户关联建筑 -->
	<select id="selectPersonBuildingNewByCustId" parameterType="PersonBuildingNew"
		resultMap="ResultMapWithHouseNew">
		select distinct d.building_structure_id,d.cust_id from
		(select * from tc_person_building where cust_id = #{custId,jdbcType=VARCHAR}
		and state = 0
		<if test="projectType!=null and projectType!=''">
			union
			select * from tc_person_building pb where pb.building_structure_id in
			(
			select h.building_structure_id from tc_house h where h.id in(
			SELECT
			au.house_id
			FROM
			t_authorization_project AS ap,
			t_authorization au
			WHERE
			ap.authorization_id = au.authorization_id
			AND au.status = '1'
			AND ap.authorization_project_type_id =#{projectType}
			AND au.authorized_personId =#{custId,jdbcType=VARCHAR}
			AND au.sta_date &lt;= CURDATE()
			AND au.end_date &gt;= CURDATE()
			)
			)
		</if>
		) as d
	</select>

	<!-- 通过房屋id查询房屋关联的用户以及用户的信息 -->
	<select id="listPersonBuildingByHouseId" parameterType="String"
		resultMap="ResultMapWithPersonCust">
		select * from tc_person_building where building_structure_id = #{0}
		and state = 0
	</select>

	<resultMap type="PersonBuildingNew" id="AllResultMap">
		<result column="person_building_id" property="personBuildingId"
			jdbcType="VARCHAR" />
		<result column="cust_id" property="custId" jdbcType="VARCHAR" />
		<result column="cust_type" property="custType" jdbcType="VARCHAR" />
		<association property="houseNew" column="building_structure_id"
			javaType="HouseNew">
			<id column="id" property="id" jdbcType="VARCHAR" />
			<result column="house_num" property="houseNum" jdbcType="VARCHAR" />
			<result column="join_state" property="joinState" jdbcType="TINYINT" />
			<result column="market_state" property="marketState" jdbcType="TINYINT" />
			<result column="complete_area" property="completeArea"
				jdbcType="DOUBLE" />
		</association>
		<association property="buildingStructureNew" column="id"
			javaType="BuildingStructureNew">
			<id column="id" property="id" jdbcType="VARCHAR" />
			<result column="full_name" property="fullName" jdbcType="VARCHAR" />
		</association>
	</resultMap>

	<!-- 根据客户id查询客户建筑关系，获取建筑相关信息 -->
	<select id="listPersonBuildingNewByCustId" parameterType="String"
		resultMap="AllResultMap">
		select
		tp.person_building_id,tp.cust_id,tp.cust_type,tb.id,tb.full_name,th.house_num,th.join_state,th.market_state,th.complete_area
		from tc_person_building tp,tc_building_structure tb,tc_house th
		where tb.id = tp.building_structure_id and tp.building_structure_id =
		th.building_structure_id and tp.cust_id = #{custId}
	</select>

	<!-- 通过关系id修改信息 -->
	<update id="updataPersonBuildingById" parameterType="PersonBuildingNew">
		update tc_person_building
		set
		cust_id=#{custId},enterprise_id=#{enterpriseId},building_structure_id=#{buildingStructureId},state=#{state},cust_type=#{custType},enterprise_call_type=#{enterpriseCallType},accessory=#{accessory}
		where person_building_id=#{personBuildingId}
	</update>

	<!-- 通过custId和建筑结构id查询关系数据 -->
	<select id="getPersonBuildingNewByCustIdAndBsId_one"
		parameterType="String" resultMap="BaseResultMap">
		select * from tc_person_building where cust_id=#{0} and
		building_structure_id=#{1} and state=0
	</select>

	<!-- 通过custId和建筑结构id查询关系数据 -->
	<select id="getRelationBycustId" parameterType="String"
		resultMap="BaseResultMap">
		SELECT d.full_name,b.name,b.cust_id,a.* FROM `tc_person_building` a
		LEFT JOIN tc_person_cust b ON a.cust_id=b.cust_id
		LEFT JOIN tc_building_structure d ON d.id = a.building_structure_id
		WHERE a.cust_id=#{0} and a.state=0 and a.cust_type='员工'
		GROUP BY a.person_building_id
	</select>

	<select id="getAllPersonBuildings" parameterType="String"
		resultMap="BaseResultMap">
		SELECT * FROM tc_person_building WHERE state=0 AND cust_type="业主" AND
		building_structure_id=#{0}
	</select>

	<update id="deletePersonBuilding" parameterType="String">
		update tc_person_building
		set state=1
		where person_building_id=#{0}
	</update>
	
	<select id="getPersonBuildingNewsByCompany" parameterType="String" resultMap="BaseResultMap">
		SELECT
			pb.*
		FROM
			(
				SELECT
					p.project_id
				FROM
					t_project p
				WHERE
					p.company = #{0}
			) pro
		LEFT JOIN tc_building_structure bs ON bs.project_id = pro.project_id
		LEFT JOIN tc_person_building pb ON bs.id = pb.building_structure_id
		WHERE
			bs.building_type = '住宅'
		AND pb.person_building_id IS NOT NULL
	</select>
	
	<!-- 根据项目id获取项目下的客户建筑关联关系  王洲  2016.2.1 -->
	<select id="getPersonBuildingByProjectId" parameterType="String" resultMap="BaseResultMap">
		select * from tc_person_building where building_structure_id in (select id from tc_building_structure where project_id = #{0}) and state = 0
	</select>
	
	<!-- 根据项目id获取项目下的客户建筑关联关系  管宇辉  2016.3.17 -->
	<select id="getPersonBuildingHasMoreByProjectId" parameterType="String" resultMap="ResultMapWithPersonCustAndEnterpriseCust">
		select * from tc_person_building where building_structure_id in (select id from tc_building_structure where project_id = #{0}) and state = 0
	</select>
	
	
	<select id="getPersonBuildingByCustId" parameterType="String" resultMap="BuildingCustResultMap">
		SELECT
			pb.*
		FROM
			tc_person_building pb
		LEFT JOIN tc_building_structure bs ON pb.building_structure_id = bs.id
		WHERE
			pb.cust_id = #{0}
		AND bs.building_type = '住宅'
	</select>
	
	<select id="gteBuildingByPersonId" parameterType="String" resultType="String">
		select building_structure_id from tc_person_building where cust_id=#{0}
	</select>
	
	<select id="getHouseNewByHouseId" parameterType="String" resultMap="houseNewResultMap">
	 	SELECT * FROM tc_house WHERE id = #{houseId,jdbcType=VARCHAR}
	 </select>
	 
	 <select id="getSipByStuctureId" parameterType="String" resultMap="SipResultMap">
		SELECT s.sip_id, s.sip_name, s.sip_pwd from tc_sipmanage s left JOIN tc_house h ON s.sip_id = h.sip_id WHERE h.building_structure_id=#{0}
	</select>
	
	<select id="getPersonIdByBuildingStruId" parameterType="String" resultType="String">
	 	select cust_id from tc_person_building where building_structure_id = #{0}
	 </select>
	
	
	<!-- 批量插入资产绑定信息（用于Excel导入） -->
	<insert id="insertList"  parameterType="java.util.List">
		insert into tc_person_building (person_building_id, cust_id,
		enterprise_id,
		building_structure_id, state, cust_type,relation_date)
    	values 
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.personBuildingId,jdbcType=VARCHAR}, #{item.custId,jdbcType=VARCHAR},
		#{item.enterpriseId,jdbcType=VARCHAR},
		#{item.buildingStructureId,jdbcType=VARCHAR},0,
		#{item.custType,jdbcType=VARCHAR},now())
		</foreach>
	</insert>
	
	<update id="deletePersonBuildingByCustId" >
		update tc_person_building set state = 1 
		where cust_id = #{0} and building_structure_id = #{1}
		 and cust_type = '租客'
	</update>
	
	<!-- 支付系统对接接口  根据个人客户id查询关联的所有建筑，包括为业主和为租客  王洲 2016.04.26 -->
	<select id="listBuildingByCustId" parameterType="String" resultMap="ResultMapForPayms">
		select a.building_structure_id,a.cust_type,c.project_name,b.full_name from tc_person_building a 
		left join tc_building_structure b on a.building_structure_id = b.id 
		left join t_project c on b.project_id = c.project_id 
		left join tc_person_cust d on a.cust_id = d.cust_id 
		where d.cust_id = #{0} and a.state = 0
	</select>
	
	<!-- 获取室内机sip -->
	<select id="getIndoorSipByStuctureId" parameterType="String" resultMap="SipResultMap">
		SELECT s.sip_id, s.sip_name, s.sip_pwd from tc_sipmanage s left JOIN tc_house h ON s.sip_id = h.indoor_sip_id WHERE h.building_structure_id=#{0}
	</select>
	
	<select id="getPersonBuildingByCustIdList" resultMap="BuildingCustResultMap">
		SELECT
			pb.*
		FROM
			tc_person_building pb
		LEFT JOIN tc_building_structure bs ON pb.building_structure_id = bs.id
		WHERE
			pb.cust_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
		AND bs.building_type = '住宅'
	</select>
	
	<select id="gteBuildingByPersonIdList" resultType="String">
		select building_structure_id from tc_person_building where cust_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
	</select>
</mapper>