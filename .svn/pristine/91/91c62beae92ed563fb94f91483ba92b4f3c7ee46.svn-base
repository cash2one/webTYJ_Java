<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flf.mapper.TRoleMapper" >
  <resultMap id="BaseResultMap" type="com.flf.entity.TRole" >
    <id column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="role_type" property="roleType" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="create_id" property="createId" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="modify_id" property="modifyId" jdbcType="VARCHAR" />
    <result column="modifytime" property="modifytime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_type, role_name, create_id, createtime, modify_id, modifytime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.flf.entity.TRole" >
    insert into t_role (role_id, role_type, role_name, 
      create_id, createtime, modify_id, 
      modifytime)
    values (#{roleId,jdbcType=VARCHAR}, #{roleType,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{createId,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{modifyId,jdbcType=VARCHAR}, 
      #{modifytime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.flf.entity.TRole" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleType != null" >
        role_type,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="modifyId != null" >
        modify_id,
      </if>
      <if test="modifytime != null" >
        modifytime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null" >
        #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null" >
        #{modifyId,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flf.entity.TRole" >
    update t_role
    <set >
      <if test="roleType != null" >
        role_type = #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null" >
        modify_id = #{modifyId,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null" >
        modifytime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flf.entity.TRole" >
    update t_role
    set role_type = #{roleType,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=VARCHAR},
      modifytime = #{modifytime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>

	<select id="getTRoleByRoleType" parameterType="String" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from t_role 
		where role_type = #{roleType,jdbcType=VARCHAR}
	</select>
	
	<select id="selectAllTRole" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from t_role
	</select>
	
	<!-- 根据角色id查找角色类型 -->
	<select id="getRoleTypeByRoleId" parameterType="String" resultType="String">
		select role_type from t_role where role_id = #{0}
	</select>

</mapper>