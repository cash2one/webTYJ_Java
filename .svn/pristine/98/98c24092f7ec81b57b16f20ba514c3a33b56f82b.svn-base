<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flf.mapper.TasksJournalMapper" >
  <resultMap id="BaseResultMap" type="TasksJournal" >
    <id column="tasks_journal_id" property="tasksJournalId" jdbcType="VARCHAR" />
    <result column="task_id" property="taskId" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="VARCHAR" />
    <result column="operation_time" property="operationTime" jdbcType="TIMESTAMP" />
    <result column="cre_order_id" property="creOrderId" jdbcType="VARCHAR" />
    <result column="cre_order_type" property="creOrderType" jdbcType="TINYINT" />
    <result column="change_state" property="changeState" jdbcType="TINYINT" />
    <result column="change_order_state" property="changeOrderState" jdbcType="TINYINT" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="staff_name" property="operatorName" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="TasksJournal" id="resultTasksJournalMap" extends="BaseResultMap">
  	<collection property="tasks" column="task_id" select="com.flf.mapper.TasksMapper.getTasksbyId"></collection>
  	<collection property="staff" column="review_id" select="com.flf.mapper.StaffMapper.selectByid"></collection>
  </resultMap>
  
<!--    <resultMap type="TasksJournal" id="AppResultTasksJournalMap" extends="BaseResultMap">
  	<collection property="tasks" column="task_id" select="com.flf.mapper.TasksMapper.getAppTasksbyId"></collection>
  </resultMap> -->
  <!--  
  <select id="selectTasks" resultMap="ResultTasks" parameterType="String">
  	select * from ts_tasks where taskId=#{0}
  </select>
  
  
  <select id="selectStaff" resultMap="StaffResultMap" parameterType="String">
  	select * from t_staff where staff_id=#{0}
  </select>
  -->
 <delete id="deleteTasksJournal" parameterType="String">
  delete from ts_tasks_journal where tasks_journal_id=#{0}
  </delete>
  
  <select id="getTasksJournalbyDateandType" parameterType="String" resultMap="resultTasksJournalMap">
  	select * from ts_tasks_journal where cre_order_type = #{0} and operation_time = #{1}
  </select>
  
  <select id="getTasksJournalbyTasksId" parameterType="String" resultMap="BaseResultMap">
  	<!-- select * from ts_tasks_journal where task_id = #{0} and cre_order_id is not null order by operation_time -->
  	<!-- select * from ts_tasks_journal where task_id = #{0} order by operation_time -->
  	
	SELECT tj.*,s.staff_name FROM ts_tasks_journal tj 
	LEFT JOIN t_staff s ON s.staff_id = tj.operator_id
	WHERE task_id = #{0} ORDER BY operation_time
  </select>
  
  <select id="listPageTasksJournal" parameterType="TasksJournal" resultMap="resultTasksJournalMap">
  select * from ts_tasks_journal 
  </select>
  
  <select id="listAllTasksJournal"  resultMap="resultTasksJournalMap" >
  select * from ts_tasks_journal 
  </select>
  
  <select id="getTasksJournalbyId" parameterType="String" resultMap="BaseResultMap">
  select * from ts_tasks_journal where tasks_journal_id=#{0}
  </select>
  
  <insert id="insertTasksJournal" parameterType="TasksJournal" >
    insert into ts_tasks_journal(
    tasks_journal_id,task_id, operator_id, 
    operation_time,cre_order_id,cre_order_type, 
    change_state,change_order_state,remarks)
    values (UUID(), #{taskId,jdbcType=VARCHAR},
    #{operatorId,jdbcType=VARCHAR},#{operationTime,jdbcType=TIMESTAMP},#{creOrderId,jdbcType=VARCHAR},
    #{creOrderType,jdbcType=TINYINT},#{changeState,jdbcType=TINYINT}, #{changeOrderState,jdbcType=TINYINT},#{remarks,jdbcType=VARCHAR})
  </insert>
 
  <update id="updateTasksJournal" parameterType="TasksJournal" >
    update ts_tasks_journal
    set task_id = #{taskId,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      cre_order_id = #{creOrderId,jdbcType=VARCHAR},
      cre_order_type = #{creOrderType,jdbcType=TINYINT},
      change_state = #{changeState,jdbcType=TINYINT},
      change_order_state = #{changeOrderState,jdbcType=TINYINT},
      remarks = #{remarks,jdbcType=VARCHAR}
    where tasks_journal_id = #{tasksJournalId,jdbcType=VARCHAR}
  </update>
</mapper>