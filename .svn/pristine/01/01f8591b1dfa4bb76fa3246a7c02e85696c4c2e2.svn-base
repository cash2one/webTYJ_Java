<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flf.mapper.ElectricityMeterRecordsMapper" >
  <resultMap id="BaseResultMap" type="com.flf.entity.ElectricityMeterRecords" >
    <id column="electricity_meter_records_id" property="electricityMeterRecordsId" jdbcType="VARCHAR" />
    <result column="electricity_meter_id" property="electricityMeterId" jdbcType="VARCHAR" />
    <result column="installation_time" property="installationTime" jdbcType="DATE" />
    <result column="enabling_time" property="enablingTime" jdbcType="DATE" />
    <result column="install" property="install" jdbcType="VARCHAR" />
    <result column="outage_time" property="outageTime" jdbcType="DATE" />
    <result column="using_nature" property="usingNature" jdbcType="VARCHAR" />
    <result column="electricity_meter_building_id" property="electricityMeterBuildingId" jdbcType="VARCHAR" />
    <result column="assets_id" property="assetsId" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="reading_way" property="readingWay" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="is_billing" property="isBilling" jdbcType="VARCHAR" />
    <result column="last_time_reading" property="lastTimeReading" jdbcType="DOUBLE" />
    <result column="last_month_reading" property="lastMonthReading" jdbcType="DOUBLE" />
    <result column="initial_reading" property="initialReading" jdbcType="DOUBLE" />
    <result column="stop_reading" property="stopReading" jdbcType="DOUBLE" />
    <result column="building_structure_id" property="buildingStructureId" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="electricity_meter_num" property="electricityMeterNum" jdbcType="VARCHAR" />
    <result column="reading" property="reading" jdbcType="DOUBLE" />
    <result column="meter_reading_people" property="meterReadingPeople" jdbcType="VARCHAR" />
    <result column="meter_reading_date" property="meterReadingDate" jdbcType="VARCHAR" />
  	<result column="property_id" property="propertyId" jdbcType="VARCHAR" />
    <result column="parent_num" property="parentNum" jdbcType="VARCHAR" />
    <result column="main_num" property="mainNum" jdbcType="VARCHAR" />
    <result column="electricity_meter_described" property="electricityMeterDescribed" jdbcType="VARCHAR" />
    <result column="public_electricity" property="publicElectricity" jdbcType="VARCHAR" />
  	<result column="loss_rate" property="lossRate" jdbcType="VARCHAR" />
    <result column="electricity_loss" property="electricityLoss" jdbcType="DOUBLE" />
    <result column="boot_child_consumption" property="bootChildConsumption" jdbcType="DOUBLE" />
    <result column="child_consumption" property="childConsumption" jdbcType="DOUBLE" />
    <result column="consumption" property="consumption" jdbcType="DOUBLE" />
    <result column="electricity_name" property="electricityName" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ElectricityMeterResultMap" type="com.flf.entity.ElectricityMeter" >
    <id column="electricity_meter_id" property="electricityMeterId" jdbcType="VARCHAR" />
    <result column="assets_id" property="assetsId" jdbcType="VARCHAR" />
    <result column="electricity_meter_num" property="electricityMeterNum" jdbcType="VARCHAR" />
    <result column="assets_num" property="assetsNum" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="ratio" property="ratio" jdbcType="DOUBLE" />
    <result column="max" property="max" jdbcType="DOUBLE" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="min" property="min" jdbcType="DOUBLE" />
  </resultMap>
  
  <resultMap id="ElectricityMeterRecordsResultMap" type="com.flf.entity.ElectricityMeterRecords" >
    <id column="electricity_meter_records_id" property="electricityMeterRecordsId" jdbcType="VARCHAR" />
    <result column="electricity_meter_id" property="electricityMeterId" jdbcType="VARCHAR" />
    <result column="installation_time" property="installationTime" jdbcType="DATE" />
    <result column="enabling_time" property="enablingTime" jdbcType="DATE" />
    <result column="install" property="install" jdbcType="VARCHAR" />
    <result column="outage_time" property="outageTime" jdbcType="DATE" />
    <result column="using_nature" property="usingNature" jdbcType="VARCHAR" />
    <result column="electricity_meter_building_id" property="electricityMeterBuildingId" jdbcType="VARCHAR" />
    <result column="assets_id" property="assetsId" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="reading_way" property="readingWay" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="is_billing" property="isBilling" jdbcType="VARCHAR" />
    <result column="last_month_reading" property="lastMonthReading" jdbcType="DOUBLE" /><result column="initial_reading" property="initialReading" jdbcType="DOUBLE" />
    <result column="initial_reading" property="initialReading" jdbcType="DOUBLE" />
    <result column="stop_reading" property="stopReading" jdbcType="DOUBLE" />
    <result column="building_structure_id" property="buildingStructureId" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="electricity_meter_num" property="electricityMeterNum" jdbcType="VARCHAR" />
    <result column="reading" property="reading" jdbcType="DOUBLE" />
    <result column="meter_reading_people" property="meterReadingPeople" jdbcType="VARCHAR" />
    <result column="meter_reading_date" property="meterReadingDate" jdbcType="VARCHAR" />
    <result column="property_id" property="propertyId" jdbcType="VARCHAR" />
    <result column="parent_num" property="parentNum" jdbcType="VARCHAR" />
    <result column="main_num" property="mainNum" jdbcType="VARCHAR" />
	<result column="electricity_meter_reading_data_id" property="electricityMeterReadingDataId"
		jdbcType="VARCHAR" />
	<result column="corrected_reading_id" property="correctedReadingId"
		jdbcType="VARCHAR" />
	<result column="correction" property="correction" jdbcType="DOUBLE" />
	<result column="correction_value" property="correctionValue"
		jdbcType="DOUBLE" />
		<result column="abnormal_state" property="abnormalState"
		jdbcType="TINYINT" />
    <association property="electricityMeter" select="selectElectricityMeter" column="electricity_meter_id" javaType="ElectricityMeter">
        <id column="electricity_meter_id" property="electricityMeterId" jdbcType="VARCHAR" />
    <result column="assets_id" property="assetsId" jdbcType="VARCHAR" />
    <result column="electricity_meter_num" property="electricityMeterNum" jdbcType="VARCHAR" />
    <result column="assets_num" property="assetsNum" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="ratio" property="ratio" jdbcType="DOUBLE" />
    <result column="max" property="max" jdbcType="DOUBLE" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="min" property="min" jdbcType="DOUBLE" />
    </association>
    <association property="property" column="assets_id" select="com.flf.mapper.PropertyMapper.selectByPrimaryKey" ></association>
  </resultMap>
  
  <!-- 通过电表记录表id查询电表所有数据  --><!-- electricity_meter_records_id -->
  <select id="selectByPrimePrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
  		select * from te_electricity_meter_records where electricity_meter_records_id=#{0}
  	</select>
 
 <!--   关联建筑结构表 -->
  <resultMap type="ElectricityMeterRecords" id="resultElectricityMeterRecordsMap" extends="BaseResultMap">
  <collection property="buildingStructureNew" select="com.flf.mapper.BuildingStructureNewMapper.getBuildingStructureNewbyId" column="building_structure_id" ></collection>
  </resultMap>
  
  <resultMap type="ElectricityMeterRecords" id="ElectricityDamageMap" extends="BaseResultMap">
  	<result column="from_num" property="fromNum" jdbcType="VARCHAR" />
  </resultMap>
  

  <!-- 根据id查询电表信息 -->
  <select id="selectElectricityMeter" parameterType="String" resultMap="ElectricityMeterResultMap">
      select * from te_electricity_meter where electricity_meter_id=#{0}
  </select>
  
  
  <!-- 分页查询电表使用记录 -->
  <select id="listPageElectricityMeterRecords" parameterType="SearchMeter" resultMap="ElectricityMeterRecordsResultMap">
      select w.*,b.full_name,m.electricity_meter_num,d.reading,d.meter_reading_people,d.meter_reading_date from te_electricity_meter_records w 
      inner join tc_building_structure b on w.building_structure_id=b.id
      inner join te_electricity_meter m on w.electricity_meter_id = m.electricity_meter_id
      inner join te_electricity_meter_reading_data d on d.electricity_meter_record_id = w.electricity_meter_records_id
      where 1=1
      <if test="electricityMeterNum != null">
          and electricity_meter_num = #{electricityMeterNum}
      </if>
      <if test="fullName != null">
          and full_name = #{fullName}
      </if>
  </select>
  
  <!-- 查询电表使用记录 -->
  <select id="listAllElectricityMeterRecords"  resultMap="BaseResultMap">
      select * from te_electricity_meter_records 
  </select>
  
  <!-- 通过建筑ID查询建筑下所有换表数据 -->
  <select id="listElectricityMeterRecordsByIds" parameterType="String" resultMap="ElectricityMeterRecordsResultMap">
      select a.* ,b.full_name,twd.meter_reading_date,twd.reading from te_electricity_meter_records a
      left join te_electricity_meter_reading_data twd on a.electricity_meter_records_id =twd.electricity_meter_record_id
      left join tc_building_structure b on a.building_structure_id=b.id
      where a.building_structure_id =#{buildingStructureId} 
      group by  a.electricity_meter_id;
  </select>
  
  <!--  根据建筑结构id查询电表使用记录 -->
    <select id="listElectricityMeterRecordsbybuildigIds" parameterType="String" resultMap="ElectricityMeterRecordsResultMap">
      select * from te_electricity_meter_records where building_structure_id =#{0} and state =2
  </select>
  
   <!-- 通过建筑ID查询建筑下所有历史用表 -->
  <select id="listElectricityMeterRecordsbybuildigId" parameterType="String" resultMap="ElectricityMeterRecordsResultMap">
      select a.* ,b.full_name,twd.meter_reading_date from te_electricity_meter_records a
      left join te_electricity_meter_reading_data twd on a.electricity_meter_records_id =twd.electricity_meter_record_id
      left join tc_building_structure b on a.building_structure_id=b.id
      where a.building_structure_id =#{buildingStructureId} and a.state=3
      group by  a.electricity_meter_id;
  </select>
  
  <!-- 根据id查询电表使用记录 -->
  <select id="getElectricityMeterRecordsbyId" parameterType="String" resultMap="ElectricityMeterRecordsResultMap">
      select * from te_electricity_meter_records w 
      inner join tc_building_structure b on w.building_structure_id=b.id
      where electricity_meter_records_id =#{electricityMeterRecordsId}
  </select>
  
  <!--   根据电表ID查询电表使用记录信息 -->
   <select id="listElectricityMeterRecordsByElectricityMeterId"   parameterType="String" resultMap="ElectricityMeterRecordsResultMap">
         select *,c.full_name,b.abnormal_state,b.electricity_meter_reading_data_id,b.reading,b.last_month_reading,b.surplus,tc.corrected_reading_id,tc.correction,tc.correction_value from te_electricity_meter_records a
       left join te_electricity_meter_reading_data b on a.electricity_meter_records_id=b.electricity_meter_record_id
         left join tc_building_structure c on a.building_structure_id=c.id
         LEFT JOIN t_corrected_reading tc  on  b.corrected_reading_id=tc.corrected_reading_id
       where a.electricity_meter_id=#{0} and YEAR(b.meter_reading_date)=#{1}
       order by b.meter_reading_date asc
  </select>
  
  <!--       根据水表编号查询水表使用记录信息 -->
    <select id="listElectricityMeterRecordsbyWaterId" parameterType="String" resultMap="ElectricityMeterRecordsResultMap">
      select * from te_electricity_meter_records where electricity_meter_id in (select electricity_meter_id from te_electricity_meter where electricity_meter_num =#{electricityMeterNum})
  </select>
  
  <!-- 删除电表使用记录 -->
  <delete id="deleteElectricityMeterRecords" parameterType="String">
      delete from te_electricity_meter_records where electricity_meter_records_id =#{electricityMeterRecordsId}
  </delete>
  
  <!-- 新增电表使用记录 -->
  <insert id="insertElectricityMeterRecords" parameterType="com.flf.entity.ElectricityMeterRecords" >
    insert into te_electricity_meter_records (electricity_meter_records_id, electricity_meter_id, 
      installation_time, enabling_time, install, 
      outage_time, using_nature, electricity_meter_building_id, 
      assets_id, state, reading_way, 
      parent_id, is_billing, last_time_reading, 
      initial_reading, stop_reading, building_structure_id, parent_num, electricity_meter_described
      )
    values (UUID(), #{electricityMeterId,jdbcType=VARCHAR}, 
      #{installationTime,jdbcType=DATE}, #{enablingTime,jdbcType=DATE}, #{install,jdbcType=VARCHAR}, 
      #{outageTime,jdbcType=DATE}, #{usingNature,jdbcType=VARCHAR}, #{electricityMeterBuildingId,jdbcType=VARCHAR}, 
      #{assetsId,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{readingWay,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=VARCHAR}, #{isBilling,jdbcType=VARCHAR}, #{lastTimeReading,jdbcType=DOUBLE}, 
      #{initialReading,jdbcType=DOUBLE}, #{stopReading,jdbcType=DOUBLE}, #{buildingStructureId,jdbcType=VARCHAR}
      , #{parentNum,jdbcType=VARCHAR}, #{electricityMeterDescribed,jdbcType=VARCHAR}
      )
  </insert>
 
  <!-- 修改电表使用记录 -->
  <update id="updateElectricityMeterRecords" parameterType="com.flf.entity.ElectricityMeterRecords" >
    update te_electricity_meter_records
    <set >
      <if test="electricityMeterId != null" >
        electricity_meter_id = #{electricityMeterId,jdbcType=VARCHAR},
      </if>
      <if test="installationTime != null" >
        installation_time = #{installationTime,jdbcType=DATE},
      </if>
      <if test="enablingTime != null" >
        enabling_time = #{enablingTime,jdbcType=DATE},
      </if>
      <if test="install != null" >
        install = #{install,jdbcType=VARCHAR},
      </if>
      <if test="outageTime != null" >
        outage_time = #{outageTime,jdbcType=DATE},
      </if>
      <if test="usingNature != null" >
        using_nature = #{usingNature,jdbcType=VARCHAR},
      </if>
      <if test="electricityMeterBuildingId != null" >
        electricity_meter_building_id = #{electricityMeterBuildingId,jdbcType=VARCHAR},
      </if>
      <if test="assetsId != null" >
        assets_id = #{assetsId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="readingWay != null" >
        reading_way = #{readingWay,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="isBilling != null" >
        is_billing = #{isBilling,jdbcType=VARCHAR},
      </if>
      <if test="lastTimeReading != null" >
        last_time_reading = #{lastTimeReading,jdbcType=DOUBLE},
      </if>
      <if test="initialReading != null" >
        initial_reading = #{initialReading,jdbcType=DOUBLE},
      </if>
      <if test="stopReading != null" >
        stop_reading = #{stopReading,jdbcType=DOUBLE},
      </if>
      <if test="buildingStructureId != null" >
        building_structure_id = #{buildingStructureId,jdbcType=VARCHAR},
      </if>
    </set>
    where electricity_meter_records_id = #{electricityMeterRecordsId,jdbcType=VARCHAR}
  </update>
 
  <!--     停用功能 -->
  <update id="updateElectricityMeterRecordsbyNum" parameterType="com.flf.entity.ElectricityMeterRecords" >
    update te_electricity_meter_records
    set state = "3"    
    where electricity_meter_records_id = #{electricityMeterRecordsId,jdbcType=VARCHAR}
  </update>
  <!--    电损功能 -->
   <select id="listPageElectricityDamage" parameterType="ElectricityMeterRecords" resultMap="ElectricityDamageMap">
		SELECT
		a.*,l.*,b.electricity_meter_num,
		(
			SELECT
				c.electricity_meter_records_id
			FROM
				te_electricity_meter_records c
			JOIN te_electricity_meter d ON c.electricity_meter_id = d.electricity_meter_id
			WHERE
				c.main_num = b.electricity_meter_num
			AND c.state = '2'
		) AS from_num,
		(
			SELECT
				reading
			FROM
				te_electricity_meter_reading_data
			WHERE
				electricity_meter_record_id = a.electricity_meter_records_id
			AND YEAR (specified_date) = YEAR (
				#{queryDate}) 
				AND MONTH (specified_date) = MONTH (#{queryDate})
	) AS reading
				FROM
					te_electricity_meter_records a
				JOIN te_electricity_meter b ON a.electricity_meter_id = b.electricity_meter_id
				JOIN te_electricity_loss l ON l.electricity_num = b.electricity_meter_num
				WHERE
					a.state = '2'
				AND (ISNULL(parent_num) or parent_num='')
				AND (ISNULL(main_num) or main_num='')
				
		<if test="electricityMeterNum !=null and electricityMeterNum !=''">
         <!--  and b.electricity_meter_num  LIKE CONCAT('%',#{electricityMeterNum},'%') -->
          and b.electricity_meter_num  LIKE '%' #{electricityMeterNum} '%'
      </if>
      <if test="electricityMeterDescribed != null and electricityMeterDescribed !='' ">
          and a.electricity_meter_described LIKE CONCAT('%',#{electricityMeterDescribed},'%')
      </if>
      group by b.electricity_meter_id
  </select>
  
  <select id="selectSumReadingByParentNum" resultType="java.lang.Double">
  	select sum(a.reading) from te_electricity_meter_reading_data a
	join te_electricity_meter_records b on a.electricity_meter_record_id=b.electricity_meter_records_id
	where b.parent_num=#{0} 
	AND YEAR (a.specified_date) = YEAR (#{1}) 
	AND MONTH (a.specified_date) = MONTH (#{1})
  </select>
  
  <select id="selectSumConsumptionByParentNum" resultType="java.lang.Double">
  	select sum(a.consumption) from te_electricity_meter_reading_data a
	join te_electricity_meter_records b on a.electricity_meter_record_id=b.electricity_meter_records_id
	where b.parent_num=#{0} 
	AND YEAR (a.specified_date) = YEAR (#{1}) 
	AND MONTH (a.specified_date) = MONTH (#{1})
	AND b.public_electricity = #{2}
  </select> 
  
    <select id="selectReadingById" resultMap="BaseResultMap">
  	select a.*,b.reading,c.electricity_meter_num from te_electricity_meter_records a
	left join te_electricity_meter_reading_data b on a.electricity_meter_records_id=b.electricity_meter_record_id
	left join te_electricity_meter c on a.electricity_meter_id=c.electricity_meter_id
	where a.electricity_meter_records_id=#{0}
	AND YEAR (b.specified_date) = YEAR (#{1})
	AND MONTH (b.specified_date) = MONTH (#{1})
  </select>
  
  <select id="listPageElectricityDamageTwo" parameterType="ElectricityMeterRecords" resultMap="ElectricityDamageMap">
  	SELECT
		a.*,l.*,b.electricity_meter_num,
		(
			SELECT
				c.electricity_meter_records_id
			FROM
				te_electricity_meter_records c
			JOIN te_electricity_meter d ON c.electricity_meter_id = d.electricity_meter_id
			WHERE
				c.main_num = b.electricity_meter_num
			AND c.state = '2'
		) AS from_num,
		(
			SELECT
				reading
			FROM
				te_electricity_meter_reading_data
			WHERE
				electricity_meter_record_id = a.electricity_meter_records_id
			AND YEAR (specified_date) = YEAR (
				#{queryDate}) 
				AND MONTH (specified_date) = MONTH (#{queryDate})
	) AS reading
				FROM
					te_electricity_meter_records a
				JOIN te_electricity_meter b ON a.electricity_meter_id = b.electricity_meter_id
				JOIN te_electricity_loss l ON l.electricity_num = b.electricity_meter_num
				WHERE
					a.state = '2'
				AND (ISNULL(main_num) or main_num='')
				AND parent_num = #{parentNumOne} 
	<if test="parentNumTwo != null and parentNumTwo != ''">
	UNION ALL
	SELECT
		a.*,l.*,b.electricity_meter_num,
		(
			SELECT
				c.electricity_meter_records_id
			FROM
				te_electricity_meter_records c
			JOIN te_electricity_meter d ON c.electricity_meter_id = d.electricity_meter_id
			WHERE
				c.main_num = b.electricity_meter_num
			AND c.state = '2'
		) AS from_num,
		(
			SELECT
				reading
			FROM
				te_electricity_meter_reading_data
			WHERE
				electricity_meter_record_id = a.electricity_meter_records_id
			AND YEAR (specified_date) = YEAR (
				#{queryDate}) 
				AND MONTH (specified_date) = MONTH (#{queryDate})
	) AS reading
				FROM
					te_electricity_meter_records a
				JOIN te_electricity_meter b ON a.electricity_meter_id = b.electricity_meter_id
				JOIN te_electricity_loss l ON l.electricity_num = b.electricity_meter_num
				WHERE
					a.state = '2'
				AND (ISNULL(main_num) or main_num='')
				AND parent_num = #{parentNumTwo} 
	</if>
	<if test="electricityMeterNum !=null and electricityMeterNum !=''">
          <!-- and b.electricity_meter_num  LIKE CONCAT('%',#{electricityMeterNum},'%') -->
          and b.electricity_meter_num  LIKE '%' #{electricityMeterNum} '%'
      </if>
      <if test="electricityMeterDescribed != null and electricityMeterDescribed !='' ">
          and a.electricity_meter_described LIKE CONCAT('%',#{electricityMeterDescribed},'%')
      </if>
  </select>
  
  <select id="getElectricityDamage" parameterType="ElectricityMeterRecords" resultMap="ElectricityDamageMap">
		SELECT
		a.*,b.electricity_meter_num,
		(
			SELECT
				c.electricity_meter_records_id
			FROM
				te_electricity_meter_records c
			JOIN te_electricity_meter d ON c.electricity_meter_id = d.electricity_meter_id
			WHERE
				c.main_num = b.electricity_meter_num
			AND c.state = '2'
		) AS from_num,
		(
			SELECT
				reading
			FROM
				te_electricity_meter_reading_data
			WHERE
				electricity_meter_record_id = a.electricity_meter_records_id
			AND YEAR (specified_date) = YEAR (
				#{queryDate}) 
				AND MONTH (specified_date) = MONTH (#{queryDate})
	) AS reading
				FROM
					te_electricity_meter_records a
				JOIN te_electricity_meter b ON a.electricity_meter_id = b.electricity_meter_id
				WHERE
					a.state = '2'
				AND (ISNULL(parent_num) or parent_num='')
				AND (ISNULL(main_num) or main_num='')
  </select>
  
   <select id="getElectricityDamageTwo" parameterType="java.util.Map" resultMap="ElectricityDamageMap">
  	SELECT
		a.*,b.electricity_meter_num,
		(
			SELECT
				c.electricity_meter_records_id
			FROM
				te_electricity_meter_records c
			JOIN te_electricity_meter d ON c.electricity_meter_id = d.electricity_meter_id
			WHERE
				c.main_num = b.electricity_meter_num
			AND c.state = '2'
		) AS from_num,
		(
			SELECT
				reading
			FROM
				te_electricity_meter_reading_data
			WHERE
				electricity_meter_record_id = a.electricity_meter_records_id
			AND YEAR (specified_date) = YEAR (
				#{queryDate}) 
				AND MONTH (specified_date) = MONTH (#{queryDate})
	) AS reading
				FROM
					te_electricity_meter_records a
				JOIN te_electricity_meter b ON a.electricity_meter_id = b.electricity_meter_id
				WHERE
					a.state = '2'
				AND (ISNULL(main_num) or main_num='')
				AND parent_num in 
				<foreach collection="parentNumList" open="(" close=")" separator="," item="item">
					#{item}
				</foreach>
  </select>
 
  
</mapper>