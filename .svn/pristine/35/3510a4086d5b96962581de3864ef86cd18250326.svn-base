/**
 * @Title: BuildingComponentService.java
 * @Package com.flf.service
 * @Description: TODO
 * Copyright: Copyright (c) 2011 
 * Company:武汉闻风多奇软件开发有限公司
 * 
 * @author wangtao
 * @date 2015-6-23 下午4:38:13
 * @version V1.0
 */

package com.flf.service;

import java.io.InputStream;
import java.util.List;

import javax.jws.WebService;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import com.flf.entity.Annex;
import com.flf.entity.BuildingComponent;
import com.flf.entity.PageRestful;
import com.flf.request.Info;


/**
 * @ClassName: BuildingComponentService
 * @Description: TODO
 * @author wangyong
 * @date 2015-6-23 下午4:38:13
 * 
 */
@WebService
@Path("/BuildingComponent")
public interface BuildingComponentService {
	
	/**
	 * 分页显示建筑组件信息
	 * 
	 * @return
	 */
	@POST
   	@Path("/listPageBuildingComponent")
   	@Produces(MediaType.APPLICATION_JSON)
    PageRestful listPageBuildingComponent(BuildingComponent buildingComponent);  
	
	/**
	 * 查询所有建筑组件信息
	 * 
	 * @return
	 */
	@GET
	@Path("/listBuildingComponentAll")
	@Produces(MediaType.APPLICATION_JSON)
	List<BuildingComponent> listBuildingComponentAll();

	/**
	 * 根据id查询建筑组件信息
	 * 
	 * @param BuildingComponentId
	 * @return
	 */
	@GET
	@Path("/getBuildingComponentByIdRest/{BuildingComponentId}")
	@Produces(MediaType.APPLICATION_JSON)
	BuildingComponent getBuildingComponentByIdRest(@PathParam("BuildingComponentId") String BuildingComponentId);

	/**
	 * 添加建筑组件信息同时添加组件与资产关联信息
	 * 
	 * @param BuildingComponent
	 * @return
	 */
	@POST
	@Path("/AddBuildingComponent")
	@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })
	int AddBuildingComponent(BuildingComponent BuildingComponent);

	/**
	 * 修改建筑组件信息
	 * 
	 * @param BuildingComponent
	 * @return
	 */
	@PUT
	@Path("/UpdateBuildingComponent")
	@Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })
	void UpdateBuildingComponent(BuildingComponent BuildingComponent);

	/**
	 * 删除建筑组件信息
	 * 
	 * @param BuildingComponentId
	 * @return
	 */
	@GET
	@Path("/DeleteBuildingComponentById/{BuildingComponentId}")
	void DeleteBuildingComponentById(@PathParam("BuildingComponentId") String BuildingComponentId);

  	/**
  	 * 导入Excel数据文档
  	 * @param annex
  	 * @return
  	 */
  	@POST
  	@Path("/importExcelFile")
  	@Produces(MediaType.APPLICATION_JSON)
  	@Consumes({MediaType.APPLICATION_JSON,MediaType.APPLICATION_XML})
  	Info importExcelFile(Annex annex);

  	/**
  	 * 导出Excel模板
  	 * @return
  	 */
  	InputStream importExcelBuildingComponent();
  	
  	/**
  	 * 导出建筑组件信息  王洲  2016.1.11
  	 * @return
  	 */
  	InputStream createExcelBuildingComponent(BuildingComponent buildingComponent);
}
