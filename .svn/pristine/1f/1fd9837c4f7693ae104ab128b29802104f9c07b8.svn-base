<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flf.mapper.TeamworkStaffRoleMapper" >
  <resultMap id="BaseResultMap" type="com.flf.entity.TeamworkStaffRole" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="teamwork_staff_id" property="teamworkStaffId" jdbcType="VARCHAR" />
    <result column="user_role_id" property="userRoleId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="TeamworkStaffResultMap" type="com.flf.entity.TeamworkStaffRole" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="teamwork_staff_id" property="teamworkStaffId" jdbcType="VARCHAR" />
    <result column="user_role_id" property="userRoleId" jdbcType="VARCHAR" />
    <collection property="teamworkStaff" column="teamwork_staff_id" javaType="Teamworkstaff" select="com.flf.mapper.TeamworkstaffMapper.getTeamworkstaffbyId"></collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, teamwork_staff_id, user_role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_teamwork_staff_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="findCountByMap" resultType="Integer" parameterType="java.util.Map">
  	SELECT COUNT(*) FROM t_teamwork_staff_role WHERE 
	teamwork_staff_id IN (SELECT id FROM t_teamwork_staff WHERE staff_id = #{staffId} <if test="teamworkId != null">and teamwork_id = #{teamworkId}</if>)
	AND 
	user_role_id IN (SELECT id FROM t_user_role WHERE role_id = #{roleId} AND user_id IN (SELECT user_id FROM t_user WHERE employ_id = #{staffId}))
  </select>
  
  <select id="findTeamworkStaffRoleByMap" parameterType="java.util.Map" resultMap="TeamworkStaffResultMap">
  	SELECT * FROM t_teamwork_staff_role WHERE 
	teamwork_staff_id IN (SELECT id FROM t_teamwork_staff WHERE staff_id = #{staffId} <if test="teamworkId != null">and teamwork_id = #{teamworkId}</if>)
	AND 
	user_role_id IN (SELECT id FROM t_user_role WHERE role_id = #{roleId} AND user_id IN (SELECT user_id FROM t_user WHERE employ_id = #{staffId}))
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_teamwork_staff_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="TeamworkStaffRole" >
    insert into t_teamwork_staff_role (id, teamwork_staff_id, user_role_id
      )
    values (#{id,jdbcType=VARCHAR}, #{teamworkStaffId,jdbcType=VARCHAR}, #{userRoleId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="TeamworkStaffRole" >
    insert into t_teamwork_staff_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teamworkStaffId != null" >
        teamwork_staff_id,
      </if>
      <if test="userRoleId != null" >
        user_role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="teamworkStaffId != null" >
        #{teamworkStaffId,jdbcType=VARCHAR},
      </if>
      <if test="userRoleId != null" >
        #{userRoleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="TeamworkStaffRole" >
    update t_teamwork_staff_role
    <set >
      <if test="teamworkStaffId != null" >
        teamwork_staff_id = #{teamworkStaffId,jdbcType=VARCHAR},
      </if>
      <if test="userRoleId != null" >
        user_role_id = #{userRoleId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="TeamworkStaffRole" >
    update t_teamwork_staff_role
    set teamwork_staff_id = #{teamworkStaffId,jdbcType=VARCHAR},
      user_role_id = #{userRoleId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>